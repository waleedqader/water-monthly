name: Build Tiles
on:
  workflow_dispatch: {}
  push:
    branches: [ "main" ]
    paths: [ "incoming/**" ]
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install GDAL, tippecanoe, jq, unzip
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin tippecanoe jq unzip
      - name: Find latest ZIP
        id: f
        run: |
          set -e
          ls -1 incoming/*.zip | sort | tail -n 1 > latest.txt || true
          if [ ! -s latest.txt ]; then echo "found=false" >> $GITHUB_OUTPUT; exit 0; fi
          latest=$(cat latest.txt)
          month=$(echo "$latest" | sed -E 's/.*([0-9]{4}-[0-9]{2}).*/\1/')
          echo "found=true" >> $GITHUB_OUTPUT
          echo "zip=$latest" >> $GITHUB_OUTPUT
          echo "month=$month" >> $GITHUB_OUTPUT
      - name: Stop if none
        if: steps.f.outputs.found != 'true'
        run: echo "No ZIPs uploaded yet."
      - name: Unzip
        if: steps.f.outputs.found == 'true'
        run: |
          rm -rf work && mkdir -p work
          unzip -o "${{ steps.f.outputs.zip }}" -d work
      - name: Convert to GeoJSON (WGS84)
        if: steps.f.outputs.found == 'true'
        run: |
          shp=$(ls -1 work/*.shp | head -n 1)
          ogr2ogr -t_srs EPSG:4326 work/lakes_4326.geojson "$shp" --config SHAPE_ENCODING UTF-8 -lco RFC7946=YES
      - name: Generate vector tiles
        if: steps.f.outputs.found == 'true'
        run: |
          outdir="docs/tiles/${{ steps.f.outputs.month }}"
          rm -rf "$outdir" && mkdir -p "$outdir"
          tippecanoe -e "$outdir" -l lakes -Z5 -z14 --no-tile-compression work/lakes_4326.geojson
      - name: Update index.json
        if: steps.f.outputs.found == 'true'
        run: |
          mkdir -p docs
          test -f docs/index.json || echo '{"months":[]}' > docs/index.json
          month="${{ steps.f.outputs.month }}"
          tmp=$(mktemp)
          jq --arg m "$month" --arg p "tiles/$month"              '.months += [ { "month": $m, "path": $p, "minzoom": 5, "maxzoom": 14 } ]
              | .months |= unique_by(.month) | .months |= sort_by(.month)' docs/index.json > "$tmp"
          mv "$tmp" docs/index.json
      - name: Commit
        if: steps.f.outputs.found == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/
          git commit -m "Publish tiles for ${{ steps.f.outputs.month }}" || echo "Nothing to commit"
          git push
